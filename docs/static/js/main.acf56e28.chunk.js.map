{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.jsx","hooks/useFecthGifs.jsx","components/GifGridItem.jsx","components/GifGrid.jsx","GitExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifGrid","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFecthGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAyCeA,EArCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAInB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,mCACI,sBAAMC,SATO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,+BCblBG,EAAU,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EAAM,0CAA0CC,UAAUH,GAAU,qDADpD,SAEHI,MAAMF,GAFH,cAEhBG,EAFgB,gBAGCA,EAAKC,OAHN,uBAGdC,EAHc,EAGdA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARpB,kBAWfM,GAXe,4CAAH,sDCmBRO,EAjBM,SAAEf,GACnB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNS,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OATAC,qBAAU,WACNpB,EAAWC,GACNoB,MAAK,SAAAC,GACEH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAG1B,CAAChB,IACGiB,GCNIK,EATK,SAAC,GAAoB,EAAnBX,GAAoB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC5B,OACI,sBAAKqB,UAAU,2CAAf,UACG,qBAAKC,IAAKtB,EAAKuB,IAAKb,IACpB,4BAAIA,QCoBAc,EAtBC,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAIf,EAAiCe,EAAaf,GAAjCa,EAAb,EAAQN,KAAaS,EAArB,EAAqBA,QACrB,OACI,qCACI,6BAAKhB,IACJgB,GAAW,mBAAGO,UAAU,kCAAb,qBACZ,qBAAKA,UAAU,YAAf,SACKV,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aCYlBgB,EAtBM,WACjB,MAAoCzC,mBAAS,CAAC,iBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KACA,OACI,gCACI,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCbjC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.acf56e28.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n    //Para saber que la persona que esta escribiendo \r\n    //o tiene actuamente en su input debemos \r\n    //utilizar un use state para eso \r\n    const [inputValue, setInputValue] = useState('');\r\n    //Para tomar la propiedad que tiene el formulario debemos \r\n    //utilizar la propiedad e.target.value  para cambiar el \r\n    //el estado\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    //Para prevenir el refresh del navegador,\r\n    // hacer un e.preventDefault \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue,...cats ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n//Obligar que la propiedad deba ser pasada para poder funcionar\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifGrid = async (category) => {\r\n    const url = 'https://api.giphy.com/v1/gifs/search?q='+encodeURI(category)+'&limit=10&api_key=JwceWwDWh7JK1oxxTkze18qhQyDNx0QN';\r\n    const resp = await fetch(url)\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n    return gifs;\r\n}","import { useState, useEffect } from 'react'\r\nimport { getGifGrid } from '../helpers/getGifs';\r\nconst useFecthGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n    useEffect(() => {\r\n        getGifGrid(category)\r\n            .then(imgs => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n            })\r\n    }, [category])\r\n    return state;\r\n}\r\n\r\nexport default useFecthGifs\r\n","import React from 'react'\r\nconst GifGridItem = ({id, title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUp\">\r\n           <img src={url} alt={title}/>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport useFecthGifs from '../hooks/useFecthGifs'\r\nimport GifGridItem from './GifGridItem';\r\nconst GifGrid = ({ category }) => {\r\n    //El use effect se utiliza mas que todo para peticiones de\r\n    //ya que permite una unica peticion que se hace para asi \r\n    //evitar consumir recursos\r\n    const { data:images, loading } = useFecthGifs(category);\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p className=\"animate__animate animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {images.map(img => (\r\n                    <GifGridItem\r\n                        key={img.id}\r\n                        {...img}\r\n                    />\r\n                ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GitExpertApp = () => {\r\n    const [categories, setCategories] = useState(['The simpsons']);\r\n    return (\r\n        <div>\r\n            <h2>GitExpertApp</h2>\r\n            {/* Podemos pasar propiedades entre componentes */}\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr></hr>\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />       \r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GitExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GitExpertApp from './GitExpertApp';\nimport './index.css';\nReactDOM.render(\n    <GitExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}